package myproject;


import java.awt.print.PrinterException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.MessageFormat;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author PC
 */
public class CERTIFICATE_LIST extends javax.swing.JInternalFrame {

    /**
     * Creates new form CERTIFICATE_LIST
     */
    public CERTIFICATE_LIST() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        search_box = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("CERTIFICATE_LISTS");
        getContentPane().setLayout(null);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CERTIFICATE_NO", "VEHICLE_NO_MODEL", "RECEIPT_NO", "PREMIUM", "DATED"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(152, 78, 1076, 510);

        search_box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_boxActionPerformed(evt);
            }
        });
        getContentPane().add(search_box);
        search_box.setBounds(166, 29, 188, 31);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mobile-search.png"))); // NOI18N
        jButton1.setText("SEARCH");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(386, 29, 99, 31);

        jButton2.setText("PRINT");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(1031, 37, 88, 23);

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\PC\\Desktop\\5220071-plain-picture.jpg")); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(-6, -40, 1480, 1280);

        setBounds(0, 0, 1470, 819);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
try
 {    Connection myconnection;
        
                 String path="jdbc:mysql://localhost/";
                 String place="category";
                 String uname="root" ;
                
                 String pass="";
                 myconnection=DriverManager.getConnection(path+place, uname, pass);
 
 
                      try
                        {
                          String myquery="select * from certificate_table where  certificate_no=? or veh_no_nam_mfd=?";
                          PreparedStatement mystatement = myconnection.prepareStatement(myquery);
                                 mystatement.setString(1, search_box.getText());
                                   mystatement.setString(2, search_box.getText());
                        
                          ResultSet myresult=mystatement.executeQuery();
 
                         if(myresult.next())
                            {
                              DefaultTableModel mymodel = (DefaultTableModel) jTable1.getModel();
                              
                            
                              
                              do
                              { String CERTIFICATE_NO,VEHICLE_NO_MODEL,RECEIPT_NO,PREMIUM,DATED;
                                           CERTIFICATE_NO=myresult.getString("certificate_no");
                                           VEHICLE_NO_MODEL=myresult.getString("veh_no_nam_mfd");
                                           RECEIPT_NO=myresult.getString("receipt_no");
                                           PREMIUM=myresult.getString("premium");
                                           DATED=myresult.getString("dated");
                                           
                                          
                                mymodel.addRow(new Object[]{CERTIFICATE_NO,VEHICLE_NO_MODEL,RECEIPT_NO,PREMIUM,DATED});
                               }
                               while(myresult.next());
 
                               }
                        else
                        {
                          JOptionPane.showMessageDialog(rootPane,"No Info available");
                         }
 }
 catch(Exception e)
 {
 JOptionPane.showMessageDialog(rootPane, "Error in Query due to " + e.getMessage());
 }
 finally
 {
 myconnection.close();
 }
 }
 catch(Exception e)
 {
 JOptionPane.showMessageDialog(rootPane, "Error in Connection due to " + e.getMessage());
 }           // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void search_boxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_boxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_search_boxActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
                                       
       MessageFormat myheader=new MessageFormat("List of certificate") ;
       MessageFormat myfooter=new MessageFormat("page{0}") ;
       try
        {jTable1.print(JTable.PrintMode.FIT_WIDTH,myheader,myfooter);
        }
       catch(PrinterException e )
       { JOptionPane.showMessageDialog(rootPane, "Error while printing due to" + e.getMessage());
       }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField search_box;
    // End of variables declaration//GEN-END:variables
}
